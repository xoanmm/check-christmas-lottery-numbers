name: Release

on:
  workflow_run:
    workflows:
      - "Test"
    branches: [ main ]
    types:
      - completed

jobs:
  semantic-release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Create empty release_version file
        run: touch release_version.txt

      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --debug

      - name: Upload release_version
        uses: actions/upload-artifact@v2
        with:
          name: release_version
          path: release_version.txt

  publish-version:
    # TODO: use output from previous job adding an if condiction instead one per step
    # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: PublishVersion
    runs-on: ubuntu-latest
    needs: semantic-release
    steps:

      - name: Download release_version
        uses: actions/download-artifact@v2
        with:
          name: release_version

      - name: Read release_version
        id: release_version
        # Set RELEASE_VERSION environment variable
        run: |
          echo "RELEASE_VERSION=$(cat release_version.txt)" >> $GITHUB_ENV
          if [ "$RELEASE_VERSION" = "" ]; then
            echo "::warning::No new version to release."
          fi

      - name: Checkout code
        if: env.RELEASE_VERSION != ''
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub Registry
        if: env.RELEASE_VERSION != ''
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to Docker Hub
        if: env.RELEASE_VERSION != ''
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            xoanmallon/check-christmas-lottery-numbers:${{ env.RELEASE_VERSION }}
            xoanmallon/check-christmas-lottery-numbers:latest

      - name: Run GoReleaser
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: ./.github/actions/goreleaser