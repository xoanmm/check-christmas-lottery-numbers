name: Release

env:
  GHCR_REGISTRY: ghcr.io
  IMAGE_NAME: check-christmas-lottery-numbers

on:
  workflow_run:
    workflows:
      - "Test"
    branches: [ main ]
    types:
      - completed

jobs:
  semantic-release:
    if: "${{ github.event.workflow_run.conclusion == 'success' && !contains(github.event.commits[0].message, 'chore(release):') }}"
    name: Semantic Release
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Configure qemu
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup yq
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
        env:
          YQ_VERSION: "3.4.1"

      - name: Setup helm
        run: |
          mkdir /tmp/helm
          wget -qO /tmp/helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz
          tar -xvf /tmp/helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz -C /tmp/helm/
          sudo mv /tmp/helm/linux-amd64/helm /usr/local/bin/helm
          sudo chmod +x /usr/local/bin/helm
        env:
          HELM_VERSION: "3.7.1"
      
      - name: Setup helm-docs
        run: |
          mkdir /tmp/helm-docs
          wget -qO /tmp/helm-docs/helm-docs_${HELM_DOCS_VERSION}_Linux_x86_64.tar.gz https://github.com/norwoodj/helm-docs/releases/download/v${HELM_DOCS_VERSION}/helm-docs_${HELM_DOCS_VERSION}_Linux_x86_64.tar.gz
          tar -xf /tmp/helm-docs/helm-docs_${HELM_DOCS_VERSION}_Linux_x86_64.tar.gz -C /tmp/helm-docs
          sudo mv /tmp/helm-docs/helm-docs /usr/local/bin/helm-docs
          sudo chmod +x /usr/local/bin/helm-docs
        env:
          HELM_DOCS_VERSION: "1.5.0"

      - name: Create empty semantic_release_version.txt file
        run: touch semantic_release_version.txt

      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --debug

      - name: Get the version
        id: get_version
        run: |
          echo VERSION=$(cat semantic_release_version.txt) >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run GoReleaser
        if: ${{ env.VERSION != '' }}
        uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package helm chart with new version
        if: ${{ env.VERSION != '' }}
        run: helm package ./helm/check-christmas-lottery-numbers -d /tmp

      - name: Upload helm package chart with new version
        if: ${{ env.VERSION != '' }}
        uses: actions/upload-artifact@v2
        with:
          name: helm_package_${{ env.VERSION }}
          path: /tmp/check-christmas-lottery-numbers-${{ env.VERSION }}.tgz
    outputs:
      version: ${{ env.VERSION }}

  publish-version:
    if: "${{ github.event.workflow_run.conclusion == 'success' && needs.semantic-release.outputs.version != '' }}"
    name: PublishVersion
    runs-on: ubuntu-latest
    needs: semantic-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      
      # Get release information to determine id of the current release
      - name: Get release info
        id: get-release-info
        uses: kaliber5/action-get-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: "v${{ env.VERSION}}"

      # Download helm chart package to upload as release asset
      - name: Download helm package
        uses: actions/download-artifact@v2
        with:
          name: helm_package_${{ env.VERSION }}

      # Upload helm chart tgz file to GitHub release assets associated with version
      - name: Upload helm chart tgz file
        id: upload-helm-chart-tgz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/xoanmm/check-christmas-lottery-numbers/releases/${{ steps.get-release-info.outputs.id }}/assets?name=check-christmas-lottery-numbers-${{ env.VERSION }}.tgz
          asset_path: ./check-christmas-lottery-numbers-${{ env.VERSION }}.tgz
          asset_name: check-christmas-lottery-numbers-${{ env.VERSION }}.tgz
          asset_content_type: application/gzip